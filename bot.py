import os
import telebot
from telebot import types
import time
from flask import Flask, request

TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

def main_menu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row("üé• –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ")
    keyboard.row("üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", "üåê –ù–∞—à —Å–∞–π—Ç")
    keyboard.row("üë• –≠–¢–û –õ–Æ–î–ò")
    return keyboard

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø—É—Ç—å? –ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=main_menu()
    )

@bot.message_handler(func=lambda msg: True)
def handle_message(message):
    if message.text == "üé• –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ":
        send_video_sequence(message.chat.id)
    elif message.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏":
        bot.send_message(message.chat.id, "–°–≤—è–∑—å: @your_contact_username")
    elif message.text == "üåê –ù–∞—à —Å–∞–π—Ç":
        bot.send_message(message.chat.id, "–í–æ—Ç –Ω–∞—à —Å–∞–π—Ç: https://yourwebsite.com")
    elif message.text == "üë• –≠–¢–û –õ–Æ–î–ò":
        bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∏–µ –ª—é–¥–∏, –≤–æ—Ç –∏—Ö –æ—Ç–∑—ã–≤—ã: https://yourreviews.com")

def send_video_sequence(chat_id):
    video_path = "static/video.mp4"
    if os.path.exists(video_path):
        with open(video_path, 'rb') as video:
            bot.send_video(chat_id, video)
        time.sleep(30)
        bot.send_message(chat_id, "–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫? –ù–∞–ø–∏—à–∏ –Ω–∞–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!")
    else:
        bot.send_message(chat_id, "–í–∏–¥–µ–æ –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª video.mp4 –≤ –ø–∞–ø–∫—É static.")

@app.route(f"/{TOKEN}", methods=['POST'])
def webhook():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "OK", 200

@app.route('/')
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"{os.getenv('WEBHOOK_URL')}/{TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
