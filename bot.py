import os
import telebot
from telebot import types
from flask import Flask, request
import time

TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

video_path = "video.mp4"

def main_menu(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üé• –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ", "üë• –≠–¢–û –õ–Æ–î–ò")
    markup.row("üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", "üåê –ù–∞—à —Å–∞–π—Ç")
    bot.send_message(chat_id, '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏ –Ω–∞ –ø—É—Ç–∏ –∫ —Å–≤–æ–±–æ–¥–Ω–æ–º—É —Ç–∞–Ω—Ü—É –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ —à–∫–æ–ª—ã –≠–¢–û –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ú–æ–≥–∏–ª–µ–≤–∞. –°–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ!', reply_markup=markup)

@bot.message_handler(commands=["start"])
def handle_start(message):
    main_menu(message.chat.id)

@bot.message_handler(func=lambda message: message.text == "üé• –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ")
def handle_video(message):
    chat_id = message.chat.id
    send_video_sequence(chat_id)
    time.sleep(180)

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üåê –ù–∞—à —Å–∞–π—Ç", url="https://etodance.com"))
    markup.add(types.InlineKeyboardButton("üë• –≠–¢–û –õ–Æ–î–ò", url="https://etodance.com/etofirst"))
    markup.add(types.InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏", url="https://t.me/eto_dance_school"))

    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

def send_video_sequence(chat_id):
    if os.path.exists(video_path):
        with open(video_path, 'rb') as video:
            bot.send_video(chat_id, video)
        time.sleep(5)
        bot.send_message(chat_id, "–ü—Ä–∏—Ö–æ–¥–∏ –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ, –∂–º–∏ –∫–Ω–æ–ø–∫—É –≠–¢–û –õ–Æ–î–ò!")
    else:
        bot.send_message(chat_id, "–í–∏–¥–µ–æ –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª video.mp4 –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞.")

@app.route("/", methods=["POST"])
def webhook():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "OK", 200

@app.route("/")
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    bot.remove_webhook()
    time.sleep(5)
    bot.set_webhook(url=os.getenv("WEBHOOK_URL"))
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))